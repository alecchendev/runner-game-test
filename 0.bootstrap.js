(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var runner_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! runner-game */ \"./pkg/runner_game.js\");\n/* harmony import */ var runner_game_runner_game_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! runner-game/runner_game_bg */ \"./pkg/runner_game_bg.wasm\");\n/*import('runner-game')\r\n  .catch(console.error);\r\n//*/\r\n\r\n\r\nconst { mat4, mat3, vec3 } = glMatrix;\r\n\r\nconst CELL_SIZE = 5;\r\nconst GRID_COLOR = \"#CCCCCC\";\r\nconst DEAD_COLOR = \"#FFFFFF\";\r\nconst ALIVE_COLOR = \"#000000\";\r\n\r\nlet startTime = Date.now();\r\n\r\nconst master = runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Master\"].new();\r\nlet universe = null;//master.start(0);\r\n//universe.update(0, 0);\r\nlet myPlayer = 0;\r\n\r\nlet cameraPosition = {\r\n  x: 0,\r\n  y: 0,\r\n  z: 0,\r\n}\r\nlet cameraAngle = {\r\n  theta: 0,\r\n  phi: 0,\r\n}\r\n\r\nlet graphics = null;//universe.graphics();\r\nlet positions = [];//graphics.positions();\r\nlet faceColors = [];//graphics.colors();\r\nlet indices = [];//graphics.indices();\r\n\r\nfunction initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n\r\n  return shaderProgram;\r\n}\r\n\r\nfunction loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n\r\n  gl.shaderSource(shader, source);\r\n\r\n  gl.compileShader(shader);\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    alert('An error occurred compiling the shaders ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\nfunction initBuffers(gl) {\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n  \r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER,\r\n                new Float32Array(positions),\r\n                gl.STATIC_DRAW);\r\n\r\n\r\n  if (faceColors.length % 4 !== 0) {\r\n    throw 'faceColors not divisible by 4!';\r\n  }\r\n\r\n  let colors = [];\r\n  for (let j = 0; j < faceColors.length / 4; ++j) {\r\n    const c = [];\r\n    for (let i = 0; i < 4; ++i) {\r\n      c.push(faceColors[4* j + i]);\r\n    }\r\n    colors = colors.concat(c, c, c, c);\r\n  }\r\n\r\n  const colorBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\r\n\r\n  //---\r\n\r\n  const indexBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n  \r\n\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n  return {\r\n    position: positionBuffer,\r\n    color: colorBuffer,\r\n    indices: indexBuffer,\r\n  };\r\n}\r\n\r\nfunction drawScene(gl, programInfo, buffers) {\r\n  /*\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n  \r\n  gl.bufferData(gl.ARRAY_BUFFER,\r\n                new Float32Array(positions),\r\n                gl.STATIC_DRAW);\r\n  */\r\n  buffers = initBuffers(gl);\r\n  \r\n  gl.clearColor(0.012, 0.647, 0.988, 1.0);\r\n  gl.clearDepth(1.0);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n  const fieldOfView = 45 * Math.PI / 180;\r\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n  const zNear = 0.025;\r\n  const zFar = 100.0;\r\n\r\n  const projectionMatrix = mat4.create();\r\n  mat4.perspective(projectionMatrix,\r\n                  fieldOfView,\r\n                  aspect,\r\n                  zNear,\r\n                  zFar);\r\n\r\n  const modelViewMatrix = mat4.create();\r\n  mat4.rotate(modelViewMatrix,\r\n    modelViewMatrix,\r\n    cameraAngle.phi,\r\n    [1, 0, 0]);\r\n  mat4.rotate(modelViewMatrix,\r\n    modelViewMatrix,\r\n    cameraAngle.theta,\r\n    [0, 1, 0]);\r\n  mat4.scale(modelViewMatrix,\r\n    modelViewMatrix,\r\n    [1, 1, -1]);\r\n  mat4.translate(modelViewMatrix,\r\n    modelViewMatrix,\r\n    [-cameraPosition.x, -cameraPosition.y, -cameraPosition.z]);\r\n  {\r\n    const numComponents = 3;  // pull out 2 values per iteration - 2d..?\r\n    const type = gl.FLOAT;    // the data in the buffer is 32bit floats\r\n    const normalize = false;  // don't normalize\r\n    const stride = 0;         // how many bytes to get from one set of values to the next\r\n                              // 0 = use type and numComponents above\r\n    const offset = 0;         // how many bytes inside the buffer to start from\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.vertexPosition,\r\n        numComponents,\r\n        type,\r\n        normalize,\r\n        stride,\r\n        offset);\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.vertexPosition);\r\n  }\r\n  {\r\n    const numComponents = 4;\r\n    const type = gl.FLOAT;\r\n    const normalize = false;\r\n    const stride = 0;\r\n    const offset = 0;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.vertexColor,\r\n        numComponents,\r\n        type,\r\n        normalize,\r\n        stride,\r\n        offset);\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.vertexColor);\r\n  }\r\n\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n  // Tell WebGL to use our program when drawing\r\n\r\n  gl.useProgram(programInfo.program);\r\n\r\n  // Set the shader uniforms\r\n\r\n  gl.uniformMatrix4fv(\r\n      programInfo.uniformLocations.projectionMatrix,\r\n      false,\r\n      projectionMatrix);\r\n  gl.uniformMatrix4fv(\r\n      programInfo.uniformLocations.modelViewMatrix,\r\n      false,\r\n      modelViewMatrix);\r\n\r\n  {\r\n\r\n    const vertexCount = positions.length / 2;\r\n    const type = gl.UNSIGNED_SHORT;\r\n    const offset = 0;\r\n    gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n  }\r\n}\r\n\r\n\r\nfunction main() {\r\n  const canvas = document.getElementById(\"runner-game-canvas\");\r\n  canvas.width = 1080;\r\n  canvas.height = 720;\r\n\r\n  const gl = canvas.getContext('webgl');\r\n\r\n  if (gl === null) {\r\n      alert(\"unable to initialize WebGL. Your browser or machine may not support it.\");\r\n      return;\r\n  }\r\n\r\n  \r\n\r\n  // SHADERS\r\n\r\n  // Vertex shader\r\n  const vsSource = `\r\n    attribute vec4 aVertexPosition;\r\n    attribute vec4 aVertexColor;\r\n\r\n    uniform mat4 uModelViewMatrix;\r\n    uniform mat4 uProjectionMatrix;\r\n\r\n    varying lowp vec4 vColor;\r\n\r\n    void main() {\r\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n      vColor = aVertexColor;\r\n    }\r\n\r\n  `;\r\n\r\n  // Fragment shader\r\n  const fsSource = `\r\n    varying lowp vec4 vColor;\r\n\r\n    void main() {\r\n      gl_FragColor = vColor;\r\n    }\r\n  `;\r\n\r\n  const shaderProgram = initShaderProgram(gl, vsSource, fsSource);\r\n\r\n  const programInfo = {\r\n    program: shaderProgram,\r\n    attribLocations: {\r\n      vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n      vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor'),\r\n    },\r\n    uniformLocations: {\r\n      projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n      modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix'),\r\n    }\r\n  };\r\n\r\n  const buffers = initBuffers(gl);\r\n\r\n  const INPUT = {\r\n    \"goleft\": 0,\r\n    \"goforward\": 1,\r\n    \"goright\": 2,\r\n    \"goback\": 3,\r\n    \"stopleft\": 4,\r\n    \"stopforward\": 5,\r\n    \"stopright\": 6,\r\n    \"stopback\": 7,\r\n    \"jump\": 8,\r\n    \"cast\": 9,\r\n    \"pull\": 10,\r\n    \"release\": 11,\r\n  }\r\n\r\n  \r\n  const levels = document.getElementsByClassName(\"level\");\r\n  const startLevel = (level) => {\r\n    universe = master.start(level);\r\n    master.set_mode(runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play);\r\n    document.getElementById(\"menu\").style.visibility = 'hidden';\r\n    startTime = Date.now();\r\n  };\r\n  for (let i = 0; i < levels.length; ++i) {\r\n    levels[i].onclick = () => startLevel(i);\r\n  }\r\n\r\n  document.getElementById(\"endMenu\").style.visibility = 'hidden';\r\n  document.getElementById(\"restart\").onclick = () => restart();\r\n  document.getElementById(\"goMenu\").onclick = () => goMenu();\r\n\r\n  document.addEventListener(\"mousedown\", function (event) {\r\n    if (master.mode() == runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n      if (document.pointerLockElement === document.body) {\r\n        if (event.button === 0) {\r\n          //universe.cast_grapple();\r\n          universe.player_input(myPlayer, INPUT[\"cast\"]);\r\n        } else if (event.button === 2) {\r\n          universe.player_input(myPlayer, INPUT[\"pull\"]);\r\n          //universe.pull_grapple();\r\n        }\r\n        \r\n      } else {\r\n        document.body.requestPointerLock();\r\n      }\r\n    }\r\n  });\r\n\r\n  document.addEventListener(\"mouseup\", function (event) {\r\n    if (master.mode() == runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n      if (document.pointerLockElement === document.body) {\r\n        if (event.button === 2) {\r\n          universe.player_input(myPlayer, INPUT[\"release\"]);\r\n          //universe.release_grapple();\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  document.body.addEventListener(\"mousemove\", function (event) {\r\n    if (master.mode() == runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n      if (document.pointerLockElement === document.body) {\r\n        //console.log(\"Moved by \" + event.movementX + \", \" + event.movementY);\r\n        universe.mouse_look(myPlayer, event.movementX, event.movementY);\r\n      }\r\n    }\r\n  });\r\n\r\n  const MOVE = {\r\n    \"a\": 0,\r\n    \"w\": 1,\r\n    \"d\": 2,\r\n    \"s\": 3,\r\n    \" \": 4,\r\n  };\r\n\r\n  const goMenu = () => {\r\n    document.exitPointerLock();\r\n    master.set_mode(runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Menu);\r\n    universe = null;\r\n    document.getElementById(\"menu\").style.visibility = 'visible';\r\n    document.getElementById(\"endMenu\").style.visibility = 'hidden';\r\n    positions = [];\r\n    faceColors = [];\r\n    indices = [];\r\n  }\r\n\r\n  const restart = () => {\r\n    universe.restart();\r\n    master.set_mode(runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play);\r\n    document.getElementById(\"menu\").style.visibility = 'hidden';\r\n    document.getElementById(\"endMenu\").style.visibility = 'hidden';\r\n    startTime = Date.now();\r\n  }\r\n\r\n  document.addEventListener('keydown', function(event) {\r\n    if (master.mode() == runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n      if (event.defaultPrevented) {\r\n        return; // Do nothing if the event was already processed\r\n      }\r\n\r\n      // this is automatic in at least chrome but just in case\r\n      if (event.key === \"m\") {\r\n        goMenu();\r\n      }\r\n\r\n      if (event.key ===\"r\") {\r\n        // restart level\r\n        restart();\r\n      }\r\n\r\n      if (event.key in MOVE) {\r\n        //universe.go(MOVE[event.key]);\r\n        if (event.key !== \" \") {\r\n          universe.player_input(myPlayer, MOVE[event.key]);\r\n        } else {\r\n          universe.player_input(myPlayer, INPUT[\"jump\"]);\r\n        }\r\n      }\r\n\r\n      if (/[0]/.test(event.key)) {\r\n        myPlayer = parseInt(event.key);\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  });\r\n\r\n  document.addEventListener('keyup', function(event) {\r\n    if (master.mode() == runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n      if (event.defaultPrevented) {\r\n        return; // Do nothing if the event was already processed\r\n      }\r\n\r\n      if (event.key in MOVE) {\r\n        //universe.stop(MOVE[event.key]);\r\n        if (event.key !== \" \") {\r\n          universe.player_input(myPlayer, MOVE[event.key] + 4);\r\n        }\r\n        \r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  });\r\n\r\n\r\n  const FPS_THROTTLE = 1000.0 / 90.0; // milliseconds / frames\r\n  let lastDrawTime = Date.now();\r\n\r\n  const goEndMenu = () => {\r\n    document.exitPointerLock();\r\n    const endTime = Date.now();\r\n    const levelTime = (endTime - startTime) / 1000;\r\n    document.getElementById(\"time\").innerHTML = \"Finished in \" + levelTime + \" seconds.\";\r\n    document.getElementById(\"endMenu\").style.visibility = 'visible';\r\n    master.set_mode(runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].WonLevel);\r\n  }\r\n\r\n  function render() {\r\n    requestAnimationFrame(render);\r\n    const currTime = Date.now();\r\n    let elapsedTime = currTime - lastDrawTime;\r\n    //console.log(elapsedTime);\r\n\r\n    if (universe && universe.won_level() && master.mode() !== runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].WonLevel) {\r\n      goEndMenu();\r\n    }\r\n\r\n    if (currTime >= lastDrawTime + FPS_THROTTLE) {\r\n\r\n      if (master.mode() === runner_game__WEBPACK_IMPORTED_MODULE_0__[\"Mode\"].Play) {\r\n        universe.update(myPlayer, elapsedTime);\r\n        graphics = universe.graphics(myPlayer);\r\n        positions = graphics.positions();\r\n        faceColors = graphics.colors();\r\n        indices = graphics.indices();\r\n\r\n        let pos = graphics.cam_pos();//[1.0, 4.0, -9.0];//\r\n        let theta = graphics.cam_theta();//0.0;//\r\n        let phi = graphics.cam_phi();//0.5; //\r\n      \r\n        cameraPosition = {\r\n          x: pos[0],\r\n          y: pos[1],\r\n          z: pos[2],\r\n        }\r\n        cameraAngle = {\r\n          theta: theta,\r\n          phi: phi,\r\n        }\r\n      }\r\n\r\n      drawScene(gl, programInfo, buffers);\r\n      lastDrawTime = Date.now();\r\n    }\r\n\r\n       \r\n  }\r\n\r\n  requestAnimationFrame(render);\r\n\r\n}\r\n\r\nwindow.onload = main;\r\n//*/\r\n\r\n/*\r\n\r\nconst getIndex = (row, column) => {\r\n  return row * width + column;\r\n};\r\n\r\nconst drawGrid = () => {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = GRID_COLOR;\r\n\r\n  for (let i = 0; i <= width; i++) {\r\n    ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\r\n    ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\r\n  }\r\n\r\n  for (let j = 0; j <= height; j++) {\r\n    ctx.moveTo(0, j * (CELL_SIZE + 1) + 1);\r\n    ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\r\n  }\r\n\r\n  ctx.stroke();\r\n};\r\n\r\nconst drawCells = () => {\r\n  const cellsPtr = universe.cells();\r\n  const cells = new Uint8Array(memory.buffer, cellsPtr, width * height);\r\n\r\n  ctx.beginPath();\r\n\r\n  for (let row = 0; row < height; row++) {\r\n    for (let col = 0; col < width; col++) {\r\n      const idx = getIndex(row, col);\r\n\r\n      ctx.fillStyle = cells[idx] == Cell.Dead\r\n        ? DEAD_COLOR\r\n        : ALIVE_COLOR;\r\n\r\n      ctx.fillRect(\r\n        col * (CELL_SIZE + 1) + 1,\r\n        row * (CELL_SIZE + 1) + 1,\r\n        CELL_SIZE,\r\n        CELL_SIZE\r\n      );\r\n    }\r\n  }\r\n  ctx.stroke();\r\n};\r\n\r\nconst renderLoop = () => {\r\n  universe.tick();\r\n\r\n  drawGrid();\r\n  drawCells();\r\n  requestAnimationFrame(renderLoop);\r\n};\r\n\r\ndrawGrid();\r\ndrawCells();\r\nrequestAnimationFrame(renderLoop);\r\n\r\n*/\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!********************************************************!*\
  !*** ./node_modules/webpack/buildin/harmony-module.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///./node_modules/webpack/buildin/harmony-module.js?");

/***/ }),

/***/ "./pkg/runner_game.js":
/*!****************************!*\
  !*** ./pkg/runner_game.js ***!
  \****************************/
/*! exports provided: Input, Go, Mode, Graphics, Master, Universe, __wbg_log_447618b456770fdc, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runner_game_bg.wasm */ \"./pkg/runner_game_bg.wasm\");\n/* harmony import */ var _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runner_game_bg.js */ \"./pkg/runner_game_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Input\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Input\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Go\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Go\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Mode\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Mode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Graphics\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Graphics\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Master\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Master\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Universe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_447618b456770fdc\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_447618b456770fdc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _runner_game_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///./pkg/runner_game.js?");

/***/ }),

/***/ "./pkg/runner_game_bg.js":
/*!*******************************!*\
  !*** ./pkg/runner_game_bg.js ***!
  \*******************************/
/*! exports provided: Input, Go, Mode, Graphics, Master, Universe, __wbg_log_447618b456770fdc, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Input\", function() { return Input; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Go\", function() { return Go; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Mode\", function() { return Mode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Graphics\", function() { return Graphics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Master\", function() { return Master; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_447618b456770fdc\", function() { return __wbg_log_447618b456770fdc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runner_game_bg.wasm */ \"./pkg/runner_game_bg.wasm\");\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetFloat32Memory0 = new Float32Array(_runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory0 = new Uint32Array(_runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n*/\nconst Input = Object.freeze({ GoLeft:0,\"0\":\"GoLeft\",GoForward:1,\"1\":\"GoForward\",GoRight:2,\"2\":\"GoRight\",GoBack:3,\"3\":\"GoBack\",StopLeft:4,\"4\":\"StopLeft\",StopForward:5,\"5\":\"StopForward\",StopRight:6,\"6\":\"StopRight\",StopBack:7,\"7\":\"StopBack\",Jump:8,\"8\":\"Jump\",Cast:9,\"9\":\"Cast\",Pull:10,\"10\":\"Pull\",Release:11,\"11\":\"Release\", });\n/**\n*/\nconst Go = Object.freeze({ Left:0,\"0\":\"Left\",Forward:1,\"1\":\"Forward\",Right:2,\"2\":\"Right\",Back:3,\"3\":\"Back\",Jump:4,\"4\":\"Jump\", });\n/**\n*/\nconst Mode = Object.freeze({ Menu:0,\"0\":\"Menu\",Play:1,\"1\":\"Play\",WonLevel:2,\"2\":\"WonLevel\", });\n/**\n*/\nclass Graphics {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Graphics.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_graphics_free\"](ptr);\n    }\n    /**\n    * @returns {Graphics}\n    */\n    static new() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_new\"]();\n        return Graphics.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} positions\n    * @param {Float32Array} colors\n    * @param {Uint32Array} indices\n    * @param {Float32Array} cam_pos\n    * @param {number} cam_theta\n    * @param {number} cam_phi\n    */\n    update(positions, colors, indices, cam_pos, cam_theta, cam_phi) {\n        var ptr0 = passArrayF32ToWasm0(positions, _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArrayF32ToWasm0(colors, _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passArray32ToWasm0(indices, _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = passArrayF32ToWasm0(cam_pos, _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len3 = WASM_VECTOR_LEN;\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_update\"](this.ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, cam_theta, cam_phi);\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    positions() {\n        try {\n            const retptr = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value - 16;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value = retptr;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_positions\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF32FromWasm0(r0, r1).slice();\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 4);\n            return v0;\n        } finally {\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value += 16;\n        }\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    colors() {\n        try {\n            const retptr = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value - 16;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value = retptr;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_colors\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF32FromWasm0(r0, r1).slice();\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 4);\n            return v0;\n        } finally {\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value += 16;\n        }\n    }\n    /**\n    * @returns {Uint32Array}\n    */\n    indices() {\n        try {\n            const retptr = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value - 16;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value = retptr;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_indices\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU32FromWasm0(r0, r1).slice();\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 4);\n            return v0;\n        } finally {\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value += 16;\n        }\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    cam_pos() {\n        try {\n            const retptr = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value - 16;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value = retptr;\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_cam_pos\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF32FromWasm0(r0, r1).slice();\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 4);\n            return v0;\n        } finally {\n            _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_export_1\"].value += 16;\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    cam_theta() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_cam_theta\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    cam_phi() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"graphics_cam_phi\"](this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nclass Master {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Master.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_master_free\"](ptr);\n    }\n    /**\n    * @returns {Master}\n    */\n    static new() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"master_new\"]();\n        return Master.__wrap(ret);\n    }\n    /**\n    * @param {number} level\n    * @returns {Universe}\n    */\n    start(level) {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"master_start\"](this.ptr, level);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @param {number} new_mode\n    */\n    set_mode(new_mode) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"master_set_mode\"](this.ptr, new_mode);\n    }\n    /**\n    * @returns {number}\n    */\n    mode() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"master_mode\"](this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n    }\n    /**\n    * @returns {boolean}\n    */\n    won_level() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_won_level\"](this.ptr);\n        return ret !== 0;\n    }\n    /**\n    */\n    restart() {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_restart\"](this.ptr);\n    }\n    /**\n    * @param {number} curr_player\n    * @param {number} elapsed_time\n    */\n    update(curr_player, elapsed_time) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_update\"](this.ptr, curr_player, elapsed_time);\n    }\n    /**\n    * @param {number} curr_player\n    * @param {number} input\n    */\n    player_input(curr_player, input) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_player_input\"](this.ptr, curr_player, input);\n    }\n    /**\n    */\n    cast_grapple() {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_cast_grapple\"](this.ptr);\n    }\n    /**\n    */\n    pull_grapple() {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_pull_grapple\"](this.ptr);\n    }\n    /**\n    */\n    release_grapple() {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_release_grapple\"](this.ptr);\n    }\n    /**\n    * @param {number} go\n    */\n    go(go) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_go\"](this.ptr, go);\n    }\n    /**\n    * @param {number} go\n    */\n    stop(go) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_stop\"](this.ptr, go);\n    }\n    /**\n    * @param {number} curr_player\n    * @param {number} movement_x\n    * @param {number} movement_y\n    */\n    mouse_look(curr_player, movement_x, movement_y) {\n        _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_mouse_look\"](this.ptr, curr_player, movement_x, movement_y);\n    }\n    /**\n    * @returns {Graphics}\n    */\n    graphics() {\n        var ret = _runner_game_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_graphics\"](this.ptr);\n        return Graphics.__wrap(ret);\n    }\n}\n\nconst __wbg_log_447618b456770fdc = function(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./pkg/runner_game_bg.js?");

/***/ }),

/***/ "./pkg/runner_game_bg.wasm":
/*!*********************************!*\
  !*** ./pkg/runner_game_bg.wasm ***!
  \*********************************/
/*! exports provided: memory, __wbg_universe_free, universe_won_level, universe_restart, universe_update, universe_player_input, universe_cast_grapple, universe_pull_grapple, universe_release_grapple, universe_go, universe_stop, universe_mouse_look, universe_graphics, __wbg_graphics_free, graphics_new, graphics_update, graphics_positions, graphics_colors, graphics_indices, graphics_cam_pos, graphics_cam_theta, graphics_cam_phi, __wbg_master_free, master_new, master_start, master_set_mode, master_mode, __wbindgen_malloc, __wbindgen_export_1, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./runner_game_bg.js */ \"./pkg/runner_game_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./pkg/runner_game_bg.wasm?");

/***/ })

}]);